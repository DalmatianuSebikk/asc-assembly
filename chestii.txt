Componente Ass:
    - registri: "variabilele" care stocheaza datele
    - instructiuni: "operatii I/O"
    - flaguri: "indicatori" care se activeaza in functie de rezultat
    - adresarea memoriei: daca e nevoie sa lucram cu mai multe date trebuie sa ne referim
    la o anumita adresa de memorie
-----------------------------------------------------------------

tipuri de date in ass:
    byte    - ocupa 1 byte
    single  - 4 bytes, folosit pt nr fractionare
    word    - 2 bytes, stocarea intregilor
    long    - 4 bytes, intregi pe 32 
    quad    - 8 bytes
    ascii   - pt siruri de caractere
    asciz   - siruri de caractere cu terminator de sir
    space   - spatiu in memorie
---------------------------------------------------------------------

structura program in ass:
    data
        # Declararea variabilelor programului
        # nume_variabila: .tip valoare
    .text
        # Aici incepe codul propriu zis
        # Definim _start ca fiind o eticheta globala reprezentand entry-ul in programul nostru
    .globl _start

    _start:
        # aici se scrie programul principal, echivalent cu main
        # oprirea programului
        mov $1, %eax    
        mov $0, %ebx
        int $0x80

sa nu uiti sa mai dai un enter la final
-----------------------------------------------------------------------------------------------

MOV: muta sursa in destinatie (mov source, destination)

sursa si destinatia pot fi:
    -   registru, registru
    -   adresa de mem, registru si invers
    -   const numerica, registru
    -   const, adresa



